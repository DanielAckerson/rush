echo "This is a 'test'. I repeat, a \"TEST\"" 'See?'

Tokenize/Lexer phase:

Text(echo), Whitespace, DoubleQuote, Text(This), Whitespace, Text(is),
Whitespace, Text(a), Whitespace, SingleQuote, Text(test), SingleQuote, Text(.),
Whitespace, Text(I), Whitespace, Text(repeat,), Whitespace, Text(a),
Whitespace, Escape, DoubleQuote, Text(TEST), Escape, DoubleQuote, DoubleQuote,
Whitespace, SingleQuote, Text(See?), SingleQuote

Syntax Phase:

First, expand path:
Path(echo),

Second, parse double-quoted arg:
	- expand variables (TODO)
	- process escaped characters (e.g. combination Escape, DoubleQuote promoted to Text("))
	- once all tokens between double quotes are Text, concatenate

Third, parse single-quoted arg:
	- don't expand variables
	- process escaped characters, same as DoubleQuote
	- concatenate

Result:

Path(echo), Arg(This is a 'test'. I repeat, a "TEST"), Arg(See?)




      5
      V
 echo "This is a 'test'. I repeat, a \"TEST\"" 'See?'
       ^
       6

 0..
 V
 asdf
     ^
     None
